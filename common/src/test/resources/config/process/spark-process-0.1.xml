<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one
  ~ or more contributor license agreements.  See the NOTICE file
  ~ distributed with this work for additional information
  ~ regarding copyright ownership.  The ASF licenses this file
  ~ to you under the Apache License, Version 2.0 (the
  ~ "License"); you may not use this file except in compliance
  ~ with the License.  You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<process name="spark-process" xmlns="uri:falcon:process:0.1">
    <!-- where -->
    <clusters>
        <cluster name="testCluster">
            <validity start="2011-11-02T00:00Z" end="2091-12-30T00:00Z"/>
        </cluster>
    </clusters>

    <!-- when -->
    <parallel>1</parallel>
    <order>LIFO</order>
    <frequency>hours(1)</frequency>

    <!-- what -->
    <inputs>
        <!-- In the workflow, the input paths will be available in a variable 'inpaths' -->
        <input name="clicks" feed="clicksFeed" start="yesterday(0,0)" end="yesterday(20,0)"/>
    </inputs>

    <outputs>
        <!-- In the workflow, the output path will be available in a variable 'outpath' -->
        <output name="clicksOutput" feed="imp-click-join2" instance="today(0,0)"/>
    </outputs>

    <!-- how -->
    <properties>
        <property name="oozie.launcher.mapreduce.map.memory.mb" value="2072"/>
        <property name="oozie.launcher.mapreduce.map.java.opts" value="-Xmx2500m"/>
    </properties>

    <workflow engine="spark" path="/falcon/test"/>
    <spark-attributes>
        <master>local</master>
        <name>Spark WordCount Application</name>
        <class>org.apache.falcon.example.spark.SparkWordCount</class>
        <jar>/falcon/test/workflow/lib/falcon-examples.jar</jar>
        <spark-opts>--executor-core 1 --executor-memory 512m --driver-memory 512m</spark-opts>
        <arg>${input}</arg>
        <arg>${output}</arg>
    </spark-attributes>

    <retry policy="periodic" delay="hours(10)" attempts="3"/>

</process>
