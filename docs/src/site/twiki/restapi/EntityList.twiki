---++  GET /api/entities/list/{:entity-type}
   * <a href="#Description">Description</a>
   * <a href="#Parameters">Parameters</a>
   * <a href="#Results">Results</a>
   * <a href="#Examples">Examples</a>

---++ Description
Get list of the entities.

---++ Parameters
   * :entity-type <optional param> Comma-separated entity types. Valid entity types are cluster, feed or process.
   * fields <optional param> Fields of entity that the user wants to view, separated by commas.
      * Valid options are STATUS, TAGS, PIPELINES, CLUSTERS.
   * nameseq <optional param> Subsequence of entity name. Not case sensitive.
      * The entity name needs to contain all the characters in the subsequence in the same order.
      * Example 1: "sample1" will match the entity named "SampleFeed1-2".
      * Example 2: "mhs" will match the entity named "New-My-Hourly-Summary".
   * tagkeys <optional param> Keywords in tags, separated by comma. Not case sensitive.
      * The returned entities will have tags that match all the tag keywords.
   * filterBy <optional param> Filter results by list of field:value pairs. Example: filterBy=STATUS:RUNNING,PIPELINES:clickLogs
      * Supported filter fields are NAME, STATUS, PIPELINES, CLUSTER.
      * Query will do an AND among filterBy fields.
   * tags <optional param> Return list of entities that have specified tags, separated by a comma. Query will do AND on tag values.
      * Example: tags=consumer=consumer@xyz.com,owner=producer@xyz.com
   * orderBy <optional param> Field by which results should be ordered.
      * Supports ordering by "name".
   * sortOrder <optional param> Valid options are "asc" and "desc"
   * offset <optional param> Show results from the offset, used for pagination. Defaults to 0.
   * numResults <optional param> Number of results to show per request, used for pagination. Only integers > 0 are valid, Default is 10.
   * doAs <optional query param> allows the current user to impersonate the user passed in doAs when interacting with the Falcon system.
   * Note:
      * We have two filtering parameters for entity tags: "tags" and "tagkeys". "tags" does the exact match in key=value fashion, while "tagkeys" finds all the entities with the given key as a substring in the tags. This "tagkeys" filter is introduced for the user who doesn't remember the exact tag but some keywords in the tag. It also helps users to save the time of typing long tags.
      * The returned entities will match all the filtering criteria.

---++ Results
Total number of results and a list of entities.

---++ Examples
---+++ Rest Call
<verbatim>
GET http://localhost:15000/api/entities/list
</verbatim>
---+++ Result
<verbatim>
{
    "totalResults":"4”,
    "entity": [
        {
            "name"  : "SampleCluster1",
            "type"  : "cluster"
        }
        {
            "name"  : "SampleOutput",
            "type"  : "feed"
        },
        {
            "name"  : "SampleInput",
            "type"  : "feed"
        }
        {
            "name"  : "SampleProcess1",
            "type"  : "process"
        }
    ]
}
</verbatim>

---+++ Rest Call
<verbatim>
GET http://localhost:15000/api/entities/list/feed
</verbatim>
---+++ Result
<verbatim>
{
    "totalResults":"2”,
    "entity": [
        {
            "name": "SampleOutput",
            "type": "feed"
        },
        {
            "name": "SampleInput",
            "type": "feed"
        }
    ]
}
</verbatim>

---+++ Rest Call
<verbatim>
GET http://localhost:15000/api/entities/list/feed?fields=status
</verbatim>
---+++ Result
<verbatim>
{
    "totalResults":"2”,
    "entity": [
        {
            "name"  : "SampleOutput",
            "type"  : "feed",
            "status": "RUNNING"
        },
        {
            "name": "SampleInput",
            "type": "feed",
            "status": "RUNNING"
        }
    ]
}
</verbatim>

---+++ Rest Call
<verbatim>
GET http://localhost:15000/api/entities/list/process?filterBy=STATUS:RUNNING,PIPELINES:dataReplication&fields=status,pipelines,tags&tags=consumer=consumer@xyz.com&orderBy=name&offset=2&numResults=2
</verbatim>
---+++ Result
<verbatim>
{
    "totalResults":"10”,
    "entity": [
        {
            "name"  : "SampleProcess1",
            "type"  : "process",
            "status": "RUNNING",
            "pipelines": "dataReplication",
            "tags": "consumer=consumer@xyz.com"
        },
        {
            "name": "SampleProcess3",
            "type": "process",
            "status": "RUNNING",
            "pipelines": "dataReplication",
            "tags": "consumer=consumer@xyz.com,owner=producer@xyz.com"
        }
    ]
}
</verbatim>

---+++ Rest Call
<verbatim>
GET http://localhost:15000/api/entities/list/feed,process?nameseq=samplebill&tagkeys=billing,healthcare&numResults=2&offset=1&fields=status,clusters,tags&doAs=joe
</verbatim>
---+++ Result
<verbatim>
{
    "totalResults":"4”,
    "entity”:[
        {
            "type":"FEED”,
            "name":"SampleUSHealthBill”,
            "status":"SUBMITTED”,
            "tags”: {"tag":["related=ushealthcare","department=billingDepartment"]},
            "clusters": {"cluster":["SampleCluster1","primaryCluster”]}
        },
        {
            "type":"PROCESS”,
            "name":"SampleHealthBill”,
            "status":"SUBMITTED”,
            "tags”: {"tag":["related=healthcare","department=billingDepartment"]},
            "clusters": {"cluster":"primaryCluster”}
        }
    ]
}
</verbatim>
