/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.falcon.notification.service.event;


import org.apache.falcon.state.ID;
import org.apache.hadoop.fs.Path;

import java.util.List;

/**
 * An event generated by {@link org.apache.falcon.notification.service.impl.DataAvailabilityService}
 * indicating availability or non-availability of a dataset.
 */
public class DataEvent extends Event {
    private final ID callbackID;
    private List<Path> dataLocations;
    private STATUS status;
    private String inputName;

    /**
     * Enumerates the status of data.
     */
    public enum STATUS {
        AVAILABLE,
        UNAVAILABLE
    }

    public DataEvent(ID callbackID, List<Path> dataLocations, STATUS availability, String inName) {
        this.callbackID = callbackID;
        this.dataLocations = dataLocations;
        this.status = availability;
        this.type = EventType.DATA_AVAILABLE;
        this.inputName = inName;
    }

    public STATUS getStatus() {
        return status;
    }

    public void setStatus(STATUS availability) {
        this.status = availability;
    }

    public List<Path> getDataLocations() {
        return dataLocations;
    }

    @Override
    public ID getTarget() {
        return callbackID;
    }

    public String getInputName() {
        return inputName;
    }
}
